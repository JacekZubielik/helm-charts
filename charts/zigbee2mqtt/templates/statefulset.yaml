apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  labels:
    {{- include "zigbee2mqtt.labels" . | nindent 4 }}
spec:
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      automountServiceAccountToken: false

      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.podSecurityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path:              /
            port:              {{ .Values.service.port }}
            scheme:            HTTP
          periodSeconds:       60
          timeoutSeconds:      10
          successThreshold:    1
          failureThreshold:    6
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path:              /
            port:              {{ .Values.service.port }}
            scheme:            HTTP
          periodSeconds:       60
          timeoutSeconds:      10
          successThreshold:    1
          failureThreshold:    2
          initialDelaySeconds: 30

        env:
        - name:   ZIGBEE2MQTT_DATA
          value:  "/data"
        - name:   TZ
          value:  {{ .Values.timezone }}

        volumeMounts:
        - name:      zigbee2mqtt
          mountPath: /app/configuration.yaml
          subPath:   configuration.yaml
        - name:      data
          mountPath: /data #/app/data
        - name:      tty-usb
          mountPath: {{ .Values.config.serial.port }} #/dev/ttyUSB0

      volumes:
      - name: zigbee2mqtt
        configMap:
          name: {{ include "zigbee2mqtt.fullname" . }}
      - name: data
          emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }} #{{ include "zigbee2mqtt.fullname" . }}
      - name: tty-usb
        hostPath:
          path: {{ .Values.config.serial.port }} #{{ .Values.device }}


      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
