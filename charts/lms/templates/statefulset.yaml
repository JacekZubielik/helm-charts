apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "lms.fullname" . }}
  labels:
    {{- include "lms.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "lms.fullname" . }}
  selector:
    matchLabels:
      {{- include "lms.selectorLabels" . | nindent 6 }}
      {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 6 }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lms.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lms.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      initContainers:
        - name: init-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c", "mkdir -pv /config; chown -Rc 1000:1000 /config"]
          volumeMounts:
            - mountPath: /config
              name: config-storage
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.podEnv }}
        env:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        ports:
        - name: http
          containerPort: 9000
        - name: dlna
          containerPort: 9090
          protocol: TCP
        - name: control
          containerPort: 3483
          protocol: TCP
        - name: discovery
          containerPort: 3483
          protocol: UDP
        volumeMounts:
        - mountPath: /config
          name: config-storage
          #subPath: config
        - mountPath: /config/playlists
          name: config-storage
          #subPath: playlists
        - mountPath: /config/IR
          name: config-storage
        - mountPath: /music
          name: music-storage
          readOnly: true
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - extra/healthcheck
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds}}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds}}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
      - name: config-storage
      {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.configstorage.hostPath }}
        hostPath:
          path: {{.Values.persistence.configstorage.hostPath}}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "lms.fullname" . }}{{- end }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}

      - name: music-storage
      {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.musicstorage.hostPath }}
        hostPath:
          path: {{.Values.persistence.musicstorage.hostPath}}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "lms.fullname" . }}{{- end }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}

      {{- range .Values.hostMounts }}
      - name: {{ .name }}
        hostPath:
          path: {{.hostPath}}
          {{- if .type }}
          type: {{ .type }}
          {{- end }}
      {{- end }}